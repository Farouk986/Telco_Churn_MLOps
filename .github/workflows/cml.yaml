name: telco-churn-ci-ml
on: [push]

jobs:
  run:
    runs-on: [ubuntu-latest]
    # Nous n'utiliserons pas de conteneur Docker pour le moment pour simplifier l'installation de CML
    # container: docker://dvcorg/cml-py3:latest 

    steps:
      - uses: actions/checkout@v4 # Utilise la version 4 des actions de checkout

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10' # Fixe la version de Python \u00E0 3.10 pour la compatibilit\u00E9 CML/DVC

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install setuptools
          pip install -r requirements.txt # Cette ligne va installer TOUTES les d\u00E9pendances, y compris dvc et cml
          
      - name: Run EDA script
        run: |
          # Ex\u00E9cute le script EDA. Note: Si 01_EDA_Telco_Churn.py utilisait ydata-profiling, 
          # il faudra ajuster ce script pour ne pas l'appeler ou le remplacer par un autre outil.
          python notebooks/01_EDA_Telco_Churn.py
          
      - name: Publish EDA Report and Metrics
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "## Telco Churn EDA Report" >> report.md
          echo "### Overview" >> report.md
          echo "This report provides an exploratory data analysis of the Telco Customer Churn dataset." >> report.md
          echo "The goal is to understand data structure, identify important features, and assess data quality." >> report.md
          echo "" >> report.md
          
          # Les lignes suivantes concernent la publication du rapport ydata-profiling. 
          # Elles sont comment\u00E9es ou supprim\u00E9es car ydata-profiling pose probl\u00E8me d'installation.
          # echo "### YData Profiling Report" >> report.md
          # echo "The full interactive report can be viewed [here](https://htmlpreview.github.io/?https://raw.githubusercontent.com/${{ github.repository }}/main/documentation/Profiling_Report_Telco_Churn.html)" >> report.md
          # echo "" >> report.md
          
          # Ajouter la distribution de Churn (exemple de m\u00E9trique simple)
          echo "### Churn Distribution" >> report.md
          echo "```" >> report.md
          # Assurez-vous que le script 01_EDA_Telco_Churn.py ou cette commande n'est pas d\u00E9pendante de ydata-profiling
          python -c "import pandas as pd; df = pd.read_csv('data/WA_Fn-UseC_-Telco-Customer-Churn.csv'); df['Churn'] = df['Churn'].apply(lambda x: 1 if x == 'Yes' else 0); print(df['Churn'].value_counts(normalize=True) * 100)" >> report.md
          echo "```" >> report.md
          echo "" >> report.md

          # Utiliser cml publish pour ins\u00E9rer le contenu de report.md dans le README.md
          cml publish report.md --md >> $GITHUB_STEP_SUMMARY